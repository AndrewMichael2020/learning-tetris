name: Build & Deploy to Cloud Run

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  GCP_PROJECT_ID: hospigen
  GCP_REGION: northamerica-northeast1
  SERVICE_NAME: rl-tetris

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      id-token: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
      
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}
      
      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev --quiet
      
      - name: Build and Push Docker Image
        run: |
          IMAGE="${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/cloud-run-source-deploy/${{ env.SERVICE_NAME }}:${{ github.sha }}"
          docker build -t "$IMAGE" .
          docker push "$IMAGE"
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV
      
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy "${{ env.SERVICE_NAME }}" \
            --image "${{ env.IMAGE }}" \
            --project "${{ env.GCP_PROJECT_ID }}" \
            --region "${{ env.GCP_REGION }}" \
            --platform managed \
            --allow-unauthenticated \
            --set-env-vars "TRAIN_ENABLED=false" \
            --memory 1Gi \
            --cpu 1 \
            --concurrency 80 \
            --timeout 300 \
            --max-instances 10
      
      - name: Show Service URL
        run: |
          SERVICE_URL=$(gcloud run services describe "${{ env.SERVICE_NAME }}" \
            --region "${{ env.GCP_REGION }}" \
            --project "${{ env.GCP_PROJECT_ID }}" \
            --format "value(status.url)")
          echo "ðŸš€ Application deployed to: $SERVICE_URL"
          echo "SERVICE_URL=$SERVICE_URL" >> $GITHUB_ENV
